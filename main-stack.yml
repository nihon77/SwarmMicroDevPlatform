version: "3.8"

services:
  traefik:
    image: traefik:v2.11
    command:
      - "--log.level=INFO"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.${CERT_RESOLVER}.acme.dnschallenge=true"
      - "--certificatesresolvers.${CERT_RESOLVER}.acme.dnschallenge.provider=${DOMAIN_BASE}"
      - "--certificatesresolvers.${CERT_RESOLVER}.acme.dnschallenge.delaybeforecheck=${DELAY_BEFORE_CHECK}"
      - "--certificatesresolvers.${CERT_RESOLVER}.acme.email=${CERT_EMAIL}"
      - "--certificatesresolvers.${CERT_RESOLVER}.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    environment:

    networks:
      - traefik-net
    deploy:
      placement:
        constraints:
          - node.role == manager
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api.rule=Host(`traefik.${DOMAIN_BASE}`)"
        - "traefik.http.routers.api.service=api@internal"
        - "traefik.http.routers.api.entrypoints=websecure"
        - "traefik.http.routers.api.tls.certresolver=${CERT_RESOLVER}"
        - "traefik.http.services.api.loadbalancer.server.port=8080"

  agent:
    image: portainer/agent:2.20.2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - traefik-net
    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os == linux
    #cap_add:
    #    - SYS_ADMIN
    #    - NET_ADMIN
    #    - MKNOD
  portainer:
    image: portainer/portainer-ce:2.20.2
    command: -H tcp://agent:9001 --tlsskipverify
    networks:
      - traefik-net
    volumes:
      - portainer_data:/data
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN_BASE}`)"
        - "traefik.http.routers.portainer.entrypoints=websecure"
        - "traefik.http.routers.portainer.tls.certresolver=${CERT_RESOLVER}"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  registry:
    image: registry:2.7
    environment:
      - REGISTRY_AUTH=htpasswd
      - REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm
      - REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd
      - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry
    volumes:
      - ./registry/data:/var/lib/registry
      - ./registry/auth:/auth
    networks:
      - traefik-net
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.registry.rule=Host(`registry.${DOMAIN_BASE}`)"
        - "traefik.http.routers.registry.entrypoints=websecure"
        - "traefik.http.routers.registry.tls.certresolver=${CERT_RESOLVER}"
        - "traefik.http.services.registry.loadbalancer.server.port=5000"


networks:
  traefik-net:
    external: true

volumes:
  portainer_data: